[project]
name = "dqmj1_util"
version = "0.0.1"
dependencies = ["ndspy", "pandas"]

[project.optional-dependencies]
test = ["mypy==1.15", "ruff==0.11", "pandas-stubs", "pytest", "pytest-cov"]
guide = ["jinja2"]
docs = ["sphinx", "furo"]

[project.scripts]
dqmj1-guide = "dqmj1_util._guide:main_without_args"

[tool.setuptools]
packages = ["dqmj1_util", "dqmj1_util._guide", "dqmj1_util.raw", "dqmj1_util.simple", "dqmj1_util._string_tables", "dqmj1_util._string_tables._locations"]

[tool.mypy]
strict = true
exclude = ["build", "docs"]

[tool.ruff]
line-length = 100
exclude = ["build", "docs"]

[tool.ruff.lint]
select = [
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "SLOT", # flake8-slots
    "TID",  # flake8-tidy-imports
    "TC",   # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "FLY",  # flynt
    "I",    # isort
    "PD",   # pandas-vet
    "N",    # pep8-naming
    "PERF", # Perflint
    "UP",   # pyupgrade
    "FURB", # refurb
    "RUF",  # Ruff-specific rule
    "TRY",  # tryceratops
]
ignore = [
    "PIE808", # Unnecessary `start` argument in `range`
    "RET505", # Unnecessary `elif` after `return` statement
    "RET507", # Unnecessary `elif` after `continue` statement
    "TC001",  # Move application import into a type-checking block
    "TC002",  # Move third-party import into a type-checking block
    "TC003",  # Move standard library import into a type-checking block
    "UP007",  # Use `X | Y` for type annotations
]